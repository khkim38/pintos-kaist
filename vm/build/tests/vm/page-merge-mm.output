Kernel command line: -q -f put page-merge-mm put child-qsort-mm run page-merge-mm
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 224 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Executing 'page-merge-mm':
(page-merge-mm) begin
(page-merge-mm) init
(page-merge-mm) sort chunk 0
Interrupt 0x0d (#GP General Protection Exception) at rip=8004218fe2
 cr2=0000000000805ed8 error=               0
rax cccccccccccccccc rbx 0000000000000000 rcx 000000800421ce6e rdx cccccccccccccccc
rsp 0000008004268d40 rbp 0000008004268d50 rsi 000000000077c000 rdi 000000800425de18
rip 0000008004218fe2 r8 0000008004259018  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x800421877d 0x800421d54e 0x80042095b5 0x80042099d3 0x8004219038 0x800420c513 0x8004221949 0x8004221868 0x8004221fbe 0x800421c0a4 0x80042077bc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 228 ticks
Thread: 42 idle ticks, 48 kernel ticks, 138 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 140 reads, 1010 writes
hd1:0: 224 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1954 characters output
Key